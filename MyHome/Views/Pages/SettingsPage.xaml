<Page
    x:Class="MyHome.Views.SettingsPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:Custom="using:Microsoft.Extensions.Primitives"
    xmlns:controls="using:Microsoft.Toolkit.Uwp.UI.Controls"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:local="using:MyHome.Helpers"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:notification="using:Syncfusion.UI.Xaml.Controls.Notification"
    Loaded="Page_Loaded"
    mc:Ignorable="d">
    <Page.Resources>
        <local:FileNameConverter x:Key="ConverterFileName" />
    </Page.Resources>
    <Page.Background>
        <ThemeResource ResourceKey="ApplicationPageBackgroundThemeBrush" />
    </Page.Background>
    <controls:TabView x:Name="Tabs">
        <!--#region   Home-->
        <controls:TabViewItem Header="Home">
            <StackPanel Margin="70,20">
                <TextBlock FontWeight="Bold" Text="Meldung:" />
                <TextBox
                    Width="300"
                    Margin="0,10,20,10"
                    HorizontalAlignment="Left"
                    PlaceholderText="Familiy"
                    Text="{x:Bind Mode=TwoWay, Path=ViewModel.Message, UpdateSourceTrigger=PropertyChanged}" />
            </StackPanel>
        </controls:TabViewItem>
        <!--#endregion-->
        <!--#region   Wetter-->
        <controls:TabViewItem Header="Wetter">
            <StackPanel Margin="70,20">
                <TextBlock FontWeight="Bold" Text="Ort:" />
                <StackPanel Orientation="Horizontal">
                    <TextBox
                        Width="300"
                        Margin="0,10,20,0"
                        HorizontalAlignment="Left"
                        PlaceholderText="Erfurt"
                        Text="{x:Bind Mode=TwoWay, Path=ViewModel.Location, UpdateSourceTrigger=PropertyChanged}" />
                    <Button
                        Margin="0,10,10,0"
                        Command="{x:Bind Path=ViewModel.GetLocationCommand}"
                        Content="Lokalisieren" />
                    <Button
                        Margin="0,10,10,0"
                        Command="{x:Bind Path=ViewModel.CheckLocationCommand}"
                        Content="Check" />
                </StackPanel>
                <TextBlock
                    Margin="0,20,0,0"
                    FontWeight="Bold"
                    Text="Darstellung:" />
                <ComboBox
                    Width="300"
                    Margin="0,10"
                    SelectedIndex="{x:Bind Mode=TwoWay, Path=ViewModel.WeatherModus, UpdateSourceTrigger=PropertyChanged}">
                    <ComboBoxItem Content="3 Tages Vorhersage (Einfach)" />
                    <ComboBoxItem Content="3 Tages Vorhersage (Komfort)" />
                </ComboBox>
                <TextBlock
                    Margin="0,20,0,0"
                    FontWeight="Bold"
                    Text="OpenWeatherMap.org Integration (Key)" />
                <StackPanel Margin="0,10,0,0" Orientation="Horizontal">
                    <TextBox
                        Width="500"
                        HorizontalAlignment="Left"
                        PlaceholderText="Key"
                        Text="{x:Bind Mode=TwoWay, Path=ViewModel.OpenWeatherMapKey, UpdateSourceTrigger=PropertyChanged}" />
                    <HyperlinkButton
                        Margin="30,0"
                        Content="Info"
                        NavigateUri="https://home.openweathermap.org/users/sign_up" />
                </StackPanel>
            </StackPanel>
        </controls:TabViewItem>
        <!--#endregion-->
        <!--#region  News-->
        <controls:TabViewItem Header="News">
            <StackPanel Margin="70,20">
                <TextBlock
                    Margin="0,0"
                    FontWeight="Bold"
                    Text="Bereich:" />
                <ComboBox
                    Width="300"
                    Margin="0,10"
                    HorizontalAlignment="Left"
                    SelectedIndex="{x:Bind Mode=TwoWay, Path=ViewModel.NewsCategoryIndex, UpdateSourceTrigger=PropertyChanged}">
                    <ComboBoxItem Content="Business" />
                    <ComboBoxItem Content="Unterhaltung" />
                    <ComboBoxItem Content="Allgemein" />
                    <ComboBoxItem Content="Gesundheit" />
                    <ComboBoxItem Content="Wissenschaft" />
                    <ComboBoxItem Content="Sport" />
                    <ComboBoxItem Content="Technologie" />
                </ComboBox>
                <TextBlock
                    Margin="0,0"
                    FontWeight="Bold"
                    Text="Zeit zwischen zwei Meldungen:" />
                <Slider
                    Width="300"
                    Margin="0,10"
                    HorizontalAlignment="Left"
                    Maximum="60"
                    Minimum="5"
                    Value="{x:Bind Mode=TwoWay, Path=ViewModel.TimeInSecondToChangeNewsMessage, UpdateSourceTrigger=PropertyChanged}" />
                <TextBlock
                    Margin="0,20,0,0"
                    FontWeight="Bold"
                    Text="NewsAPI.org Integration (Key)" />
                <StackPanel Margin="0,10,0,0" Orientation="Horizontal">
                    <TextBox
                        Width="500"
                        HorizontalAlignment="Left"
                        PlaceholderText="Key"
                        Text="{x:Bind Mode=TwoWay, Path=ViewModel.NewsAPIKey, UpdateSourceTrigger=PropertyChanged}" />
                    <HyperlinkButton
                        Margin="30,0"
                        Content="Info"
                        NavigateUri="https://newsapi.org/register" />
                </StackPanel>
            </StackPanel>
        </controls:TabViewItem>
        <!--#endregion-->
        <controls:TabViewItem Header="RSS-Reader">
            <StackPanel Margin="70,20">
                <TextBlock FontWeight="Bold" Text="RSS-Feed:" />
                <ComboBox Width="300" Margin="0,10,20,10">
                    <ComboBoxItem Content="https://www.n-tv.de/181.rss" />
                    <ComboBoxItem Content="http://newsfeed.zeit.de/all" />
                </ComboBox>
            </StackPanel>
        </controls:TabViewItem>
        <!--#region RSS Reader-->
        <!--#region  Bilder-->
        <controls:TabViewItem Header="Bilder">
            <Grid x:Name="grid">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" MinHeight="150" />
                    <RowDefinition Height="120" />
                    <RowDefinition Height="2*" />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition MinWidth="300" />
                    <ColumnDefinition Width="3*" />
                </Grid.ColumnDefinitions>
                <StackPanel Grid.ColumnSpan="2" Margin="70,20,0,0">
                    <TextBlock FontWeight="Bold" Text="Zeit zwischen Bildwechsel:" />
                    <Slider
                        Width="300"
                        Margin="0,10,0,0"
                        HorizontalAlignment="Left"
                        Maximum="60"
                        Minimum="5"
                        Value="{x:Bind Mode=TwoWay, Path=ViewModel.TimeInSecondToChangePicture, UpdateSourceTrigger=PropertyChanged}" />
                    <TextBlock
                        Margin="0,20,0,0"
                        FontWeight="Bold"
                        Text="Darstellung:" />
                    <ComboBox
                        Width="300"
                        Margin="0,10"
                        SelectedIndex="{x:Bind Mode=TwoWay, Path=ViewModel.ArtOfPicturePresentation, UpdateSourceTrigger=PropertyChanged}">
                        <ComboBoxItem Content="Ein Bild (Vollbild)" />
                        <ComboBoxItem Content="Mehrere Bilder" />
                        <ComboBoxItem Content="Karusell" />
                    </ComboBox>
                    <TextBlock
                        Margin="0,20,0,0"
                        FontWeight="Bold"
                        Text="Anzeigereihenfolge:" />
                    <ComboBox Margin="0,10" SelectedIndex="{x:Bind Mode=TwoWay, Path=ViewModel.PictureSelectionIndex, UpdateSourceTrigger=PropertyChanged}">
                        <ComboBoxItem Content="Nacheinander" />
                        <ComboBoxItem Content="Zufall" />
                    </ComboBox>
                    <TextBlock
                        Margin="0,20,0,0"
                        FontWeight="Bold"
                        Text="Dropbox-Integration (App-Tooken)" />
                    <StackPanel Margin="0,10,0,0" Orientation="Horizontal">
                        <TextBox
                            Width="500"
                            HorizontalAlignment="Left"
                            PlaceholderText="App-Tooken"
                            Text="{x:Bind Mode=TwoWay, Path=ViewModel.DropBoxAppToken, UpdateSourceTrigger=PropertyChanged}" />
                        <HyperlinkButton
                            Margin="30,0"
                            Content="Info"
                            NavigateUri="https://blogs.dropbox.com/developers/2014/05/generate-an-access-token-for-your-own-account/" />
                    </StackPanel>
                </StackPanel>
                <controls:WrapPanel
                    Grid.Row="1"
                    Grid.Column="1"
                    Grid.ColumnSpan="2"
                    Margin="70,20"
                    Orientation="Horizontal"
                    VerticalSpacing="20">
                    <Button
                        Width="115"
                        Command="{x:Bind Path=ViewModel.DownloadFromDropBoxCommand}"
                        Content="Download" />
                    <Button
                        Width="115"
                        Margin="20,0,0,0"
                        Command="{x:Bind Path=ViewModel.CreateFolderAndUploadFilesInDropboxCommand}"
                        Content="Upload Ordner..." />
                    <Button
                        Width="115"
                        Margin="20,0,0,0"
                        Command="{x:Bind Path=ViewModel.UploadFileInDropboxCommand}"
                        Content="Upload Bild..." />
                    <Button
                        Width="115"
                        Margin="20,0,0,0"
                        Command="{x:Bind Path=ViewModel.DeleteDirectoryCommand}"
                        Content="Ordner löschen" />
                    <Button
                        x:Name="ButtonDelete"
                        Width="115"
                        Margin="20,0,0,0"
                        Click="ButtonDelete_Click"
                        Content="Bilder löschen" />
                    <notification:SfProgressBar
                        x:Name="progressBar"
                        Width="200"
                        Margin="20,0,0,0"
                        DisplayContentMode="Value"
                        Maximum="{x:Bind Mode=TwoWay, Path=ViewModel.NumberOfFiles, UpdateSourceTrigger=PropertyChanged}"
                        Minimum="0"
                        ProgressType="SolidLinear"
                        Value="{x:Bind Mode=TwoWay, Path=ViewModel.Progress, UpdateSourceTrigger=PropertyChanged}" />
                    <Button
                        Width="110"
                        Margin="20,0"
                        VerticalAlignment="Center"
                        Command="{x:Bind Path=ViewModel.BreakUploadCommand}"
                        Content="Abbrechen" />

                </controls:WrapPanel>
                <ListView
                    x:Name="MyDirNamesListView"
                    Grid.Row="2"
                    Margin="70,0"
                    IsItemClickEnabled="True"
                    ItemClick="ListView_ItemClick"
                    ItemsSource="{x:Bind Path=ViewModel.DirNames}" />
                <ScrollViewer
                    Grid.Row="2"
                    Grid.Column="1"
                    Margin="70,0">
                    <GridView
                        x:Name="GridView"
                        ItemsSource="{x:Bind Path=ViewModel.FileNames}"
                        SelectionMode="Multiple">
                        <GridView.ItemTemplate>
                            <DataTemplate x:DataType="x:String">
                                <StackPanel>
                                    <TextBlock
                                        Margin="0,5"
                                        HorizontalAlignment="Center"
                                        Text="{x:Bind Converter={StaticResource ConverterFileName}}" />
                                    <Image
                                        Width="150"
                                        Height="150"
                                        HorizontalAlignment="Center">
                                        <Image.Source>
                                            <BitmapImage DecodePixelWidth="150" UriSource="{x:Bind Mode=OneWay}" />
                                        </Image.Source>
                                    </Image>
                                </StackPanel>
                            </DataTemplate>
                        </GridView.ItemTemplate>
                    </GridView>
                </ScrollViewer>
            </Grid>
        </controls:TabViewItem>
        <!--#endregion-->
        <!--#region  Uhr-->
        <controls:TabViewItem Header="Uhr">
            <StackPanel Margin="70,20">
                <TextBlock
                    Margin="0,0"
                    FontWeight="Bold"
                    Text="Anzeige" />
                <ComboBox
                    Width="100"
                    Margin="0,10"
                    SelectedIndex="{x:Bind Mode=TwoWay, Path=ViewModel.ClockModus, UpdateSourceTrigger=PropertyChanged}">
                    <ComboBoxItem Content="Analog" />
                    <ComboBoxItem Content="Digital" />
                </ComboBox>
                <CheckBox
                    Margin="0,10"
                    Content="Sekunden anzeigen"
                    IsChecked="{x:Bind Mode=TwoWay, Path=ViewModel.ShowSeconds, UpdateSourceTrigger=PropertyChanged}" />
                <CheckBox
                    Margin="0,10"
                    Content="Datum anzeigen"
                    IsChecked="{x:Bind Mode=TwoWay, Path=ViewModel.ShowDate, UpdateSourceTrigger=PropertyChanged}" />
                <StackPanel Orientation="Vertical">
                    <CheckBox
                        Margin="0,10"
                        Content="Farbe automatisch"
                        IsChecked="{x:Bind Mode=TwoWay, Path=ViewModel.AutomaticColor, UpdateSourceTrigger=PropertyChanged}" />
                </StackPanel>
                <TextBlock
                    Margin="0,20,0,0"
                    FontWeight="SemiBold"
                    Text="Vordergrund" />
                <Viewbox
                    MaxWidth="150"
                    MaxHeight="150"
                    Margin="0,10"
                    HorizontalAlignment="Left"
                    Stretch="Fill">
                    <ColorPicker
                        x:Name="myColorPickerForground"
                        ColorChanged="myColorPickerForground_ColorChanged"
                        ColorSpectrumShape="Ring"
                        IsColorChannelTextInputVisible="False"
                        IsColorPreviewVisible="False"
                        IsColorSliderVisible="False"
                        IsHexInputVisible="False" />
                </Viewbox>
                <TextBlock
                    Margin="0,20,0,0"
                    FontWeight="SemiBold"
                    Text="Hintergrund" />
                <Viewbox
                    MaxWidth="150"
                    MaxHeight="150"
                    Margin="0,10"
                    HorizontalAlignment="Left"
                    Stretch="Fill">
                    <ColorPicker
                        x:Name="myColorPickerBackground"
                        ColorChanged="myColorPickerBackground_ColorChanged"
                        ColorSpectrumShape="Ring"
                        IsColorChannelTextInputVisible="False"
                        IsColorPreviewVisible="False"
                        IsColorSliderVisible="False"
                        IsHexInputVisible="False" />
                </Viewbox>
            </StackPanel>
        </controls:TabViewItem>
        <!--#endregion-->
        <!--#region  Karte-->
        <controls:TabViewItem Header="Karte">
            <StackPanel Margin="70,20">
                <TextBlock
                    Margin="0,20,0,0"
                    FontWeight="Bold"
                    Text="Bing Maps Integration (Key)" />
                <StackPanel Margin="0,10,0,0" Orientation="Horizontal">
                    <TextBox
                        Width="500"
                        HorizontalAlignment="Left"
                        PlaceholderText="Key"
                        Text="{x:Bind Mode=TwoWay, Path=ViewModel.MapsAPIKey, UpdateSourceTrigger=PropertyChanged}" />
                    <HyperlinkButton
                        Margin="30,0"
                        Content="Info"
                        NavigateUri="https://www.bingmapsportal.com/" />
                </StackPanel>
            </StackPanel>
        </controls:TabViewItem>
        <!--#endregion-->
        <!--#region  Message-->
        <controls:TabViewItem Header="Message">
            <StackPanel Margin="70,20">
                <TextBlock
                    Margin="0,20,0,0"
                    FontWeight="Bold"
                    Text="Back4App Integration" />
                <StackPanel Margin="0,10,0,0" Orientation="Horizontal">
                    <TextBox
                        Width="500"
                        HorizontalAlignment="Left"
                        PlaceholderText="ApplicationID"
                        Text="{x:Bind Mode=TwoWay, Path=ViewModel.ApplicationID, UpdateSourceTrigger=PropertyChanged}" />
                    <HyperlinkButton
                        Margin="30,0"
                        Content="Info"
                        NavigateUri="https://www.back4app.com/" />
                </StackPanel>
                <TextBox
                    Width="500"
                    Margin="0,10,0,0"
                    HorizontalAlignment="Left"
                    PlaceholderText="NETKey"
                    Text="{x:Bind Mode=TwoWay, Path=ViewModel.NETKey, UpdateSourceTrigger=PropertyChanged}" />
                <Button
                    Width="200"
                    Margin="0,10,0,0"
                    Command="{x:Bind Path=ViewModel.DeleteAllMessageFromBaaS}"
                    Content="Alle Meldungen löschen" />
            </StackPanel>
        </controls:TabViewItem>
        <!--#endregion-->
        <!--#region App-->
        <controls:TabViewItem Header="App">
            <StackPanel Margin="70,20">
                <CheckBox
                    Margin="0,0"
                    Content="Automatischer Wechsel zwischen Bereichen"
                    IsChecked="{x:Bind Mode=TwoWay, Path=ViewModel.AutoChangeContentSections, UpdateSourceTrigger=PropertyChanged}" />
                <StackPanel Margin="0,20" Orientation="Horizontal">
                    <TextBlock FontWeight="Bold" Text="Aktive Elemente" />
                    <TextBlock
                        Margin="50,0"
                        FontWeight="Bold"
                        Text="Anzeigedauer (Sekunden)" />
                </StackPanel>
                <StackPanel Margin="0,10" Orientation="Horizontal">
                    <CheckBox
                        x:Name="checkBoxHome"
                        Content="Home"
                        IsChecked="{x:Bind Mode=TwoWay, Path=ViewModel.HomeIsActiv, UpdateSourceTrigger=PropertyChanged}" />
                    <Slider
                        Width="300"
                        Margin="50,0"
                        HorizontalAlignment="Left"
                        IsEnabled="{Binding IsChecked, ElementName=checkBoxHome}"
                        Maximum="120"
                        Minimum="1"
                        Value="{x:Bind Mode=TwoWay, Path=ViewModel.ShowDurationHome}" />
                </StackPanel>
                <StackPanel Margin="0,10" Orientation="Horizontal">
                    <CheckBox
                        x:Name="checkBoxWeather"
                        Content="Wetter"
                        IsChecked="{x:Bind Mode=TwoWay, Path=ViewModel.WeatherIsActiv, UpdateSourceTrigger=PropertyChanged}" />
                    <Slider
                        Width="300"
                        Margin="50,0"
                        HorizontalAlignment="Left"
                        IsEnabled="{Binding IsChecked, ElementName=checkBoxWeather}"
                        Maximum="120"
                        Minimum="1"
                        Value="{x:Bind Mode=TwoWay, Path=ViewModel.ShowDurationWeather, UpdateSourceTrigger=PropertyChanged}" />
                </StackPanel>
                <StackPanel Margin="0,10" Orientation="Horizontal">
                    <CheckBox
                        x:Name="checkBoxNews"
                        Content="News"
                        IsChecked="{x:Bind Mode=TwoWay, Path=ViewModel.NewsIsActiv}" />
                    <Slider
                        Width="300"
                        Margin="50,0"
                        HorizontalAlignment="Left"
                        IsEnabled="{Binding IsChecked, ElementName=checkBoxNews}"
                        Maximum="120"
                        Minimum="1"
                        Value="{x:Bind Mode=TwoWay, Path=ViewModel.ShowDurationNews}" />
                </StackPanel>
                <StackPanel Margin="0,10" Orientation="Horizontal">
                    <CheckBox
                        x:Name="checkBoxPictures"
                        Content="Bilder"
                        IsChecked="{x:Bind Mode=TwoWay, Path=ViewModel.PictureIsActiv}" />
                    <Slider
                        Width="300"
                        Margin="50,0"
                        HorizontalAlignment="Left"
                        IsEnabled="{Binding IsChecked, ElementName=checkBoxPictures}"
                        Maximum="120"
                        Minimum="1"
                        Value="{x:Bind Mode=TwoWay, Path=ViewModel.ShowDurationPictures}" />
                </StackPanel>
                <StackPanel Margin="0,10" Orientation="Horizontal">
                    <CheckBox
                        x:Name="checkBoxClock"
                        Content="Uhr"
                        IsChecked="{x:Bind Mode=TwoWay, Path=ViewModel.ClockIsActiv}" />
                    <Slider
                        Width="300"
                        Margin="50,0"
                        HorizontalAlignment="Left"
                        IsEnabled="{Binding IsChecked, ElementName=checkBoxClock}"
                        Maximum="120"
                        Minimum="1"
                        Value="{x:Bind Mode=TwoWay, Path=ViewModel.ShowDurationClock}" />
                </StackPanel>
                <StackPanel Margin="0,10" Orientation="Horizontal">
                    <CheckBox
                        x:Name="checkBoxMap"
                        Content="Karte"
                        IsChecked="{x:Bind Mode=TwoWay, Path=ViewModel.MapIsActiv}" />
                    <Slider
                        Width="300"
                        Margin="50,0"
                        HorizontalAlignment="Left"
                        IsEnabled="{Binding IsChecked, ElementName=checkBoxMap}"
                        Maximum="120"
                        Minimum="1"
                        Value="{x:Bind Mode=TwoWay, Path=ViewModel.ShowDurationMap}" />
                </StackPanel>
                <StackPanel Margin="0,10" Orientation="Horizontal">
                    <CheckBox
                        x:Name="checkBoxMessage"
                        Content="Message"
                        IsChecked="{x:Bind Mode=TwoWay, Path=ViewModel.MessageIsActiv}" />
                    <Slider
                        Width="300"
                        Margin="50,0"
                        HorizontalAlignment="Left"
                        IsEnabled="{Binding IsChecked, ElementName=checkBoxMessage}"
                        Maximum="120"
                        Minimum="1"
                        Value="{x:Bind Mode=TwoWay, Path=ViewModel.ShowDurationMessage}" />
                </StackPanel>
                <StackPanel Margin="0,10" Orientation="Horizontal">
                    <CheckBox
                        x:Name="checkBoxCanvas"
                        Content="Zeichenfläche"
                        IsChecked="{x:Bind Mode=TwoWay, Path=ViewModel.CanvasIsActiv}" />
                    <Slider
                        Width="300"
                        Margin="50,0"
                        HorizontalAlignment="Left"
                        IsEnabled="{Binding IsChecked, ElementName=checkBoxCanvas}"
                        Maximum="120"
                        Minimum="1"
                        Value="{x:Bind Mode=TwoWay, Path=ViewModel.ShowDurationCanvas}" />
                </StackPanel>
                <!--  App neu starten / Herunterfahren  -->
                <StackPanel Margin="0,10" Orientation="Horizontal">
                    <Button
                        Width="140"
                        Command="{x:Bind Path=ViewModel.SaveKeysCommand}"
                        Content="API Keys speichern" />
                    <Button
                        Width="140"
                        Margin="30,0,0,0"
                        Command="{x:Bind Path=ViewModel.LoadKeysCommand}"
                        Content="API keys laden" />
                </StackPanel>
                <StackPanel Margin="0,10" Orientation="Horizontal">
                    <Button
                        Width="140"
                        Command="{x:Bind Path=ViewModel.RestartAppCommmand}"
                        Content="Neu Starten" />
                    <Button
                        Width="140"
                        Margin="30,0,0,0"
                        Background="Orange"
                        Command="{x:Bind Path=ViewModel.ShutDownCommand}"
                        Content="Beenden" />
                </StackPanel>
                <TextBlock
                    Margin="0,20"
                    HorizontalAlignment="Left"
                    Text="{x:Bind Path=ViewModel.AppVersion}" />
            </StackPanel>
        </controls:TabViewItem>
        <controls:TabViewItem Header="MyHome">
            <WebView
                x:Name="MyWebView"
                HorizontalAlignment="Stretch"
                VerticalAlignment="Stretch" />
        </controls:TabViewItem>
        <!--#endregion-->
    </controls:TabView>
</Page>
